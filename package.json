{
  "name": "rename-angular-component",
  "displayName": "Rename Angular Component",
  "description": "Rename Angular Components, Directives and Services",
  "publisher": "tomwhite007",
  "version": "4.0.0-alpha.1",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/tomwhite007/rename-angular-component.git"
  },
  "homepage": "https://github.com/tomwhite007/rename-angular-component#readme",
  "icon": "assets/rename-angular-component-icon.png",
  "galleryBanner": {
    "color": "#373436",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "angular",
    "rename",
    "refactor",
    "component",
    "directive",
    "service",
    "selector",
    "relative",
    "paths"
  ],
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "rename-angular-component.renameComponent",
        "title": "Rename Angular Component"
      },
      {
        "command": "rename-angular-component.renameDirective",
        "title": "Rename Angular Directive"
      },
      {
        "command": "rename-angular-component.renameService",
        "title": "Rename Angular Service"
      },
      {
        "command": "rename-angular-component.renameGuard",
        "title": "Rename Angular Route Guard"
      },
      {
        "command": "rename-angular-component.renameModule",
        "title": "Rename Angular Module"
      },
      {
        "command": "rename-angular-component.renameFile",
        "title": "Rename Angular file"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceFilename =~ /^.+\\.component\\.(spec.ts|scss|css|sass|less|html|ts)$/",
          "command": "rename-angular-component.renameComponent",
          "group": "navigation"
        },
        {
          "when": "resourceFilename =~ /^.+\\.directive\\.(spec.ts|ts)$/",
          "command": "rename-angular-component.renameDirective",
          "group": "navigation"
        },
        {
          "when": "resourceFilename =~ /^.+\\.service\\.(spec.ts|ts)$/",
          "command": "rename-angular-component.renameService",
          "group": "navigation"
        },
        {
          "when": "resourceFilename =~ /^.+\\.guard\\.(spec.ts|ts)$/",
          "command": "rename-angular-component.renameGuard",
          "group": "navigation"
        },
        {
          "when": "resourceFilename =~ /^.+\\.module\\.(spec.ts|ts)$/",
          "command": "rename-angular-component.renameModule",
          "group": "navigation"
        },
        {
          "when": "resourceFilename =~ /^.+(?<!\\.component)(?<!\\.directive)(?<!\\.service)(?<!\\.guard)(?<!\\.module)\\.(spec\\.ts|scss|css|sass|less|html|ts)$/",
          "command": "rename-angular-component.renameFile",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Rename Angular Component configuration",
      "properties": {
        "renameAngularComponent.debugLog": {
          "type": "boolean",
          "default": false,
          "description": "Create debug log file to submit with new issue post"
        },
        "renameAngularComponent.useLocalDirectPaths": {
          "type": "boolean",
          "default": true,
          "description": "Update imports/exports with direct local paths even if wildcard path exists"
        },
        "renameAngularComponent.followAngular20FolderNamingConvention": {
          "type": "boolean",
          "default": true,
          "description": "Since Angular 20.x, CLI generated folder names include any dot-suffix in the folder name. \re.g. `my-component.component.ts` will be in a folder called `my-component.component`. \rSet this to false to revert to the previous behavior of using the folder name without the dot-suffix."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "yarn run check-types && yarn run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "yarn run check-types && yarn run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test --config=unit-tests.vscode-test.mjs"
  },
  "devDependencies": {
    "@types/bluebird": "^3.5.42",
    "@types/chai": "^5.2.1",
    "@types/fs-extra-promise": "^1.0.13",
    "@types/minimatch": "^5.1.2",
    "@types/mocha": "^10.0.6",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.99.0",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "chai": "5.2.0",
    "esbuild": "^0.25.1",
    "eslint": "^9.23.0",
    "glob": "^11.0.2",
    "mocha": "^10.2.0",
    "npm-run-all": "^4.1.5",
    "simple-git": "^3.27.0",
    "sinon": "^20.0.0",
    "typescript": "^5.8.2"
  },
  "dependencies": {
    "bluebird": "^3.7.2",
    "fs-extra-promise": "^1.0.1",
    "replace-in-file": "^8.3.0"
  }
}
